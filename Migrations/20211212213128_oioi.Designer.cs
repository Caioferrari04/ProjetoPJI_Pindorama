// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pindorama.Data;

namespace Pindorama.Migrations
{
    [DbContext(typeof(PindoramaContext))]
    [Migration("20211212213128_oioi")]
    partial class oioi
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CategoriaGame", b =>
                {
                    b.Property<int>("CategoriasId")
                        .HasColumnType("int");

                    b.Property<int>("JogosId")
                        .HasColumnType("int");

                    b.HasKey("CategoriasId", "JogosId");

                    b.HasIndex("JogosId");

                    b.ToTable("CategoriaGame");
                });

            modelBuilder.Entity("GameUsuario", b =>
                {
                    b.Property<int>("GamesId")
                        .HasColumnType("int");

                    b.Property<string>("UsersId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("GamesId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("GameUsuario");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Pindorama.Models.Amizade", b =>
                {
                    b.Property<string>("OrigemId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AlvoId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Confirmada")
                        .HasColumnType("bit");

                    b.HasKey("OrigemId", "AlvoId");

                    b.HasIndex("AlvoId");

                    b.ToTable("Amizades");
                });

            modelBuilder.Entity("Pindorama.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descricao = "Jogos de ação",
                            Nome = "Ação"
                        },
                        new
                        {
                            Id = 2,
                            Descricao = "Jogos de aventura",
                            Nome = "Aventura"
                        },
                        new
                        {
                            Id = 3,
                            Descricao = "Jogos indie",
                            Nome = "Indie"
                        },
                        new
                        {
                            Id = 4,
                            Descricao = "Jogos multiplayer",
                            Nome = "Multiplayer"
                        },
                        new
                        {
                            Id = 5,
                            Descricao = "Jogos singleplayer",
                            Nome = "Singleplayer"
                        });
                });

            modelBuilder.Entity("Pindorama.Models.Comentario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AutorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("DataPostagem")
                        .HasColumnType("datetime2");

                    b.Property<string>("LinkImagem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PostagemPaiId")
                        .HasColumnType("int");

                    b.Property<string>("Texto")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AutorId");

                    b.HasIndex("PostagemPaiId");

                    b.ToTable("Comentarios");
                });

            modelBuilder.Entity("Pindorama.Models.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataLancamento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Desenvolvedor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DistribuidoraId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsFree")
                        .HasColumnType("bit");

                    b.Property<string>("LinkBanner")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkLogo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkVideo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Preco")
                        .HasColumnType("float");

                    b.Property<string>("Publisher")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("compras")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Game");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataLancamento = new DateTime(2012, 8, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Counter-Strike: Global Offensive (CS: GO) expands upon the team-based action gameplay that it pioneered when it was launched 19 years ago. CS: GO features new maps, characters, weapons, and game modes, and delivers updated versions of the classic CS content (de_dust2, etc.).",
                            Desenvolvedor = "Valve",
                            IsFree = true,
                            LinkBanner = "https://arenaesports.com.br/wp-content/uploads/2018/07/Counter-Strike-Global-Offensive-requisistos-m%C3%ADnimos.jpg",
                            LinkLogo = "https://cdn.cloudflare.steamstatic.com/steam/apps/730/header.jpg?t=1631908705",
                            LinkVideo = "https://cdn.cloudflare.steamstatic.com/steam/apps/81958/movie_max.webm?t=1554409259",
                            Nome = "Counter-Strike: Global Offensive",
                            Preco = 0.0,
                            Publisher = "Valve",
                            compras = 0
                        },
                        new
                        {
                            Id = 2,
                            DataLancamento = new DateTime(2020, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Winner of over 80 awards, Control is a visually stunning third-person action-adventure that will keep you on the edge of your seat.",
                            Desenvolvedor = "Remedy Entertainment",
                            IsFree = false,
                            LinkBanner = "https://cdn-ext.fanatical.com/production/product/1280x720/3de44d6e-17ff-4260-be3f-86d15647f03e.jpeg",
                            LinkLogo = "https://cdn.cloudflare.steamstatic.com/steam/apps/870780/header.jpg?t=1629966003",
                            LinkVideo = "https://cdn.cloudflare.steamstatic.com/steam/apps/256795524/movie_max_vp9.webm?t=1599146533",
                            Nome = "Control Ultimate Edition",
                            Preco = 51.600000000000001,
                            Publisher = "505 Games",
                            compras = 0
                        },
                        new
                        {
                            Id = 3,
                            DataLancamento = new DateTime(2017, 11, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Build a world for wildlife in Planet Zoo. From the developers of Planet Coaster and Zoo Tycoon comes the ultimate zoo sim. Construct detailed habitats, manage your zoo, and meet authentic living animals who think, feel and explore the world you create around them.",
                            Desenvolvedor = "Frontier Developments",
                            IsFree = false,
                            LinkBanner = "https://cdn-ext.fanatical.com/production/product/1280x720/35d6f92d-19d0-4458-9f1b-fc83063942c8.jpeg",
                            LinkLogo = "https://cdn.cloudflare.steamstatic.com/steam/apps/703080/header_alt_assets_1.jpg?t=1633429959",
                            LinkVideo = "https://cdn.cloudflare.steamstatic.com/steam/apps/256766382/movie_max.webm?t=1572955356",
                            Nome = "Planet Zoo",
                            Preco = 40.0,
                            Publisher = "Frontier Developments",
                            compras = 0
                        },
                        new
                        {
                            Id = 4,
                            DataLancamento = new DateTime(2019, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Destiny 2 is an action MMO with a single evolving world that you and your friends can join anytime, anywhere, absolutely free.",
                            Desenvolvedor = "Bungie",
                            IsFree = true,
                            LinkBanner = "http://guiadecompras.casasbahia.com.br/imagens/2017/12/Destiny-2-Official-Reveal-Art.jpg",
                            LinkLogo = "https://cdn.cloudflare.steamstatic.com/steam/apps/1085660/header.jpg?t=1631638993",
                            LinkVideo = "https://cdn.cloudflare.steamstatic.com/steam/apps/256826687/movie_max_vp9.webm?t=1629824123",
                            Nome = "Destiny 2",
                            Preco = 0.0,
                            Publisher = "Bungie",
                            compras = 0
                        },
                        new
                        {
                            Id = 5,
                            DataLancamento = new DateTime(2013, 3, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Warframe is a cooperative free-to-play third person online action game set in an evolving sci-fi world.",
                            Desenvolvedor = "Digital Extremes",
                            IsFree = true,
                            LinkBanner = "https://www.oficinadanet.com.br/imagens/post/35877/warframe-capa.jpg",
                            LinkLogo = "https://cdn.cloudflare.steamstatic.com/steam/apps/230410/header.jpg?t=1633371015",
                            LinkVideo = "https://cdn.cloudflare.steamstatic.com/steam/apps/256841818/movie_max_vp9.webm?t=1625588620",
                            Nome = "Warframe",
                            Preco = 0.0,
                            Publisher = "Digital Extremes",
                            compras = 0
                        },
                        new
                        {
                            Id = 6,
                            DataLancamento = new DateTime(2020, 11, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Apex Legends is the award-winning, free-to-play Hero shooter from Respawn Entertainment. Master an ever-growing roster of legendary characters with powerful abilities and experience strategic squad play and innovative gameplay in the next evolution of Hero Shooter and Battle Royale.",
                            Desenvolvedor = "Respawn Entertainment",
                            IsFree = true,
                            LinkBanner = "https://sm.ign.com/t/ign_br/screenshot/default/apex-legends-lendas_6emk.1200.jpg",
                            LinkLogo = "https://cdn.cloudflare.steamstatic.com/steam/apps/1172470/header.jpg?t=1629219806",
                            LinkVideo = "https://cdn.cloudflare.steamstatic.com/steam/apps/256844400/movie_max_vp9.webm?t=1627392787",
                            Nome = "Apex Legends™",
                            Preco = 0.0,
                            Publisher = "Electronic Arts",
                            compras = 0
                        },
                        new
                        {
                            Id = 7,
                            DataLancamento = new DateTime(2018, 3, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Northgard is a strategy game based on Norse mythology in which you control a clan of Vikings vying for the control of a mysterious newfound continent.",
                            Desenvolvedor = "Shiro games",
                            IsFree = false,
                            LinkBanner = "https://cdn2.unrealengine.com/egs-northgard-shirogames-g1a-00-1920x1080-315584a1b3b7.jpg",
                            LinkLogo = "https://cdn.cloudflare.steamstatic.com/steam/apps/466560/header.jpg?t=1630575354",
                            LinkVideo = "https://cdn.cloudflare.steamstatic.com/steam/apps/256668473/movie_max.webm?t=1507541937",
                            Nome = "Northgard",
                            Preco = 23.190000000000001,
                            Publisher = "Shiro games",
                            compras = 0
                        },
                        new
                        {
                            Id = 8,
                            DataLancamento = new DateTime(2017, 3, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "NieR: Automata tells the story of androids 2B, 9S and A2 and their battle to reclaim the machine-driven dystopia overrun by powerful machines.",
                            Desenvolvedor = "Square Enix",
                            IsFree = false,
                            LinkBanner = "https://compass-ssl.xbox.com/assets/10/15/1015045a-5c87-4837-9cc4-0ae2944d4b87.jpg?n=Nier-Automata_GLP-Page-Hero-1084_1920x1080.jpg",
                            LinkLogo = "https://cdn.cloudflare.steamstatic.com/steam/apps/524220/header.jpg?t=1624266255",
                            LinkVideo = "https://cdn.cloudflare.steamstatic.com/steam/apps/256743980/movie_max.webm?t=1551200563",
                            Nome = "NieR:Automata™",
                            Preco = 53.5,
                            Publisher = "Square Enix",
                            compras = 0
                        },
                        new
                        {
                            Id = 9,
                            DataLancamento = new DateTime(2021, 11, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Battlefield™ 2042 is a first-person shooter that marks the return to the iconic all-out warfare of the franchise. In a near-future world transformed by disorder, adapt and overcome dynamically-changing battlegrounds with the help of your squad and a cutting-edge arsenal.",
                            Desenvolvedor = "DICE",
                            IsFree = false,
                            LinkBanner = "https://cdn2.unrealengine.com/egs-battlefield2042ultimateedition-dice-editions-g1a-00-1920x1080-15347ba44398.jpg",
                            LinkLogo = "https://cdn.cloudflare.steamstatic.com/steam/apps/1517290/header.jpg?t=1633525745",
                            LinkVideo = "https://cdn.cloudflare.steamstatic.com/steam/apps/256844239/movie_max_vp9.webm?t=1627310563",
                            Nome = "Battlefield™ 2042",
                            Preco = 249.0,
                            Publisher = "Eletronic Arts",
                            compras = 0
                        },
                        new
                        {
                            Id = 10,
                            DataLancamento = new DateTime(2020, 3, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Half-Life: Alyx is Valve’s VR return to the Half-Life series. It’s the story of an impossible fight against a vicious alien race known as the Combine, set between the events of Half-Life and Half-Life 2. Playing as Alyx Vance, you are humanity’s only chance for survival.",
                            Desenvolvedor = "Valve",
                            IsFree = false,
                            LinkBanner = "https://i.ytimg.com/vi/LTLotwKpLgk/maxresdefault.jpg",
                            LinkLogo = "https://cdn.cloudflare.steamstatic.com/steam/apps/546560/header.jpg?t=1631826157",
                            LinkVideo = "https://cdn.cloudflare.steamstatic.com/steam/apps/256767815/movie_max.webm?t=1583175736",
                            Nome = "Half-Life: Alyx",
                            Preco = 109.98999999999999,
                            Publisher = "Valve",
                            compras = 0
                        },
                        new
                        {
                            Id = 11,
                            DataLancamento = new DateTime(2016, 10, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Battlefield™ 1 takes you back to The Great War, WW1, where new technology and worldwide conflict changed the face of warfare forever.",
                            Desenvolvedor = "DICE",
                            IsFree = false,
                            LinkBanner = "https://i.ytimg.com/vi/PhE1db18ZK0/maxresdefault.jpg",
                            LinkLogo = "https://cdn.cloudflare.steamstatic.com/steam/apps/1238840/header.jpg?t=1633006806",
                            LinkVideo = "https://cdn.cloudflare.steamstatic.com/steam/apps/256795873/movie_max_vp9.webm?t=1597019302",
                            Nome = "Battlefield 1 ™",
                            Preco = 23.879999999999999,
                            Publisher = "Eletronic Arts",
                            compras = 0
                        },
                        new
                        {
                            Id = 12,
                            DataLancamento = new DateTime(2021, 9, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Explore a thrilling, open-world MMO filled with danger and opportunity where you'll forge a new destiny on the supernatural island of Aeternum.",
                            Desenvolvedor = "Amazon Games",
                            IsFree = false,
                            LinkBanner = "https://s2.glbimg.com/zPvvYfY_ATa1yMArOwf_9MW97c0=/1200x/smart/filters:cover():strip_icc()/i.s3.glbimg.com/v1/AUTH_08fbf48bc0524877943fe86e43087e7a/internal_photos/bs/2021/5/H/jSobTRTBScuiqf472Psg/keyartmask-3840.jpg",
                            LinkLogo = "https://cdn.cloudflare.steamstatic.com/steam/apps/1063730/header.jpg?t=1632842444",
                            LinkVideo = "https://cdn.cloudflare.steamstatic.com/steam/apps/256853212/movie_max_vp9.webm?t=1632842438",
                            Nome = "New World",
                            Preco = 75.489999999999995,
                            Publisher = "Amazon Games",
                            compras = 0
                        },
                        new
                        {
                            Id = 13,
                            DataLancamento = new DateTime(2013, 7, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Every day, millions of players worldwide enter battle as one of over a hundred Dota heroes. And no matter if it's their 10th hour of play or 1,000th, there's always something new to discover. With regular updates that ensure a constant evolution of gameplay, features, and heroes, Dota 2 has taken on a life of its own.",
                            Desenvolvedor = "Valve",
                            IsFree = true,
                            LinkBanner = "https://s2.glbimg.com/-q8MvinX_0xiDazd60GdPbioyH0=/1200x/smart/filters:cover():strip_icc()/i.s3.glbimg.com/v1/AUTH_08fbf48bc0524877943fe86e43087e7a/internal_photos/bs/2019/l/Q/L8uEtSTYmy8JwFegBjiw/images-8-.jpg",
                            LinkLogo = "https://cdn.cloudflare.steamstatic.com/steam/apps/570/header.jpg?t=1633452025",
                            LinkVideo = "https://cdn.cloudflare.steamstatic.com/steam/apps/2028243/movie_max.webm?t=1599609286",
                            Nome = "Dota 2",
                            Preco = 0.0,
                            Publisher = "Valve",
                            compras = 0
                        },
                        new
                        {
                            Id = 14,
                            DataLancamento = new DateTime(2018, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "World of Warplanes is an aerial combat MMO action game set in the Golden Age of military aviation. Throwing players into a never-ending battle for dominance of the skies, the game allows aircraft enthusiasts to pursue full-scale careers as virtual pilots, earning their wings in intense 12-vs-12 battles where supremacy in the air depends on not only a fast trigger finger, but also coordinated teamwork.",
                            Desenvolvedor = "Wargaming Group Limited",
                            IsFree = true,
                            LinkBanner = "https://i.pinimg.com/originals/71/1c/e3/711ce3d86f82f993c45c0c639324135a.jpg",
                            LinkLogo = "https://cdn.cloudflare.steamstatic.com/steam/apps/790710/header.jpg?t=1592572910",
                            LinkVideo = "https://cdn.cloudflare.steamstatic.com/steam/apps/256724984/movie_max.webm?t=1536746492",
                            Nome = "World of Warplanes",
                            Preco = 0.0,
                            Publisher = "Wargaming Group Limited",
                            compras = 0
                        },
                        new
                        {
                            Id = 15,
                            DataLancamento = new DateTime(2018, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "War Robots is an online third-person 6v6 PvP shooter—we’re talking dozens of combat robots, hundreds of weapons combinations, and heated clan battles.",
                            Desenvolvedor = "Pixonic",
                            IsFree = true,
                            LinkBanner = "https://imag.malavida.com/mvimgbig/download-fs/walking-war-robots-17300-1.jpg",
                            LinkLogo = "https://cdn.cloudflare.steamstatic.com/steam/apps/767560/header.jpg?t=1629810914",
                            LinkVideo = "https://cdn.cloudflare.steamstatic.com/steam/apps/256843182/movie_max_vp9.webm?t=1626428692",
                            Nome = "War Robots",
                            Preco = 0.0,
                            Publisher = "Pixonic",
                            compras = 0
                        },
                        new
                        {
                            Id = 16,
                            DataLancamento = new DateTime(2013, 10, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "You are an Exile, struggling to survive on the dark continent of Wraeclast, as you fight to earn power that will allow you to exact your revenge against those who wronged you. Created by hardcore gamers, Path of Exile is an online Action RPG set in a dark fantasy world.",
                            Desenvolvedor = "Grinding Gears Games",
                            IsFree = true,
                            LinkBanner = "https://cdn2.unrealengine.com/egs-pathofexile-grindinggeargames-s1-2560x1440-c9ae0f080546.jpg",
                            LinkLogo = "https://cdn.cloudflare.steamstatic.com/steam/apps/238960/header.jpg?t=1627066053",
                            LinkVideo = "https://cdn.cloudflare.steamstatic.com/steam/apps/256844005/movie_max_vp9.webm?t=1627066029",
                            Nome = "Path of Exile",
                            Preco = 0.0,
                            Publisher = "Grinding Gears Games",
                            compras = 0
                        },
                        new
                        {
                            Id = 17,
                            DataLancamento = new DateTime(2012, 4, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Warface is a contemporary MMO first person shooter with millions of fans around the world. It offers intense PvP modes, compelling PvE missions and raids that you can challenge with five diverse classes and a colossal customizable arsenal.",
                            Desenvolvedor = "MY.GAMES",
                            IsFree = true,
                            LinkBanner = "https://cdn1.epicgames.com/salesEvent/salesEvent/EGS_Warface_AllodsTeam_S1_2560x1440-bf3c5da7b0239523117b1ff2bba16dc9",
                            LinkLogo = "https://cdn.cloudflare.steamstatic.com/steam/apps/291480/header.jpg?t=1628351873",
                            LinkVideo = "https://cdn.cloudflare.steamstatic.com/steam/apps/256845617/movie_max_vp9.webm?t=1628195334",
                            Nome = "Warface",
                            Preco = 0.0,
                            Publisher = "MY.GAMES",
                            compras = 0
                        },
                        new
                        {
                            Id = 18,
                            DataLancamento = new DateTime(2013, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Neverwinter is a free, action MMORPG based on the acclaimed Dungeons & Dragons fantasy roleplaying game. Epic stories, action combat and classic roleplaying await those heroes courageous enough to enter the fantastic world of Neverwinter!",
                            Desenvolvedor = "Cryptic Studios",
                            IsFree = true,
                            LinkBanner = "https://cdn1.epicgames.com/salesEvent/salesEvent/EGS_Neverwinter_CrypticStudios_S1_2560x1440-907eede12f841fa505e7bccaf0dc48ce",
                            LinkLogo = "https://cdn.cloudflare.steamstatic.com/steam/apps/109600/header.jpg?t=1632935549",
                            LinkVideo = "https://cdn.cloudflare.steamstatic.com/steam/apps/256853712/movie_max_vp9.webm?t=1632934786",
                            Nome = "Neverwinter",
                            Preco = 0.0,
                            Publisher = "Perfect World Entertainment",
                            compras = 0
                        },
                        new
                        {
                            Id = 19,
                            DataLancamento = new DateTime(2013, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "War Thunder is the most comprehensive free-to-play, cross-platform, MMO military game dedicated to aviation, armoured vehicles, and naval craft, from the early 20th century to the most advanced modern combat units. Join now and take part in major battles on land, in the air, and at sea.",
                            Desenvolvedor = "Gaijin Entertainment",
                            IsFree = true,
                            LinkBanner = "https://pbs.twimg.com/media/E_6Z_GvUYAgyDua.jpg",
                            LinkLogo = "https://cdn.cloudflare.steamstatic.com/steam/apps/236390/header.jpg?t=1631265978",
                            LinkVideo = "https://cdn.cloudflare.steamstatic.com/steam/apps/256850482/movie_max_vp9.webm?t=1631009347",
                            Nome = "War Thunder",
                            Preco = 0.0,
                            Publisher = "Gaijin Distribution KFT",
                            compras = 0
                        },
                        new
                        {
                            Id = 20,
                            DataLancamento = new DateTime(2020, 9, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Comemore 25 anos do PES com o eFootball PES 2021 Season Update* - disponível por um preço especial de aniversário!",
                            Desenvolvedor = "Konami Digital Entertainment",
                            IsFree = false,
                            LinkBanner = "https://img.konami.com/wepes/2021/s/img/order/homescreen_pes2021.jpg",
                            LinkLogo = "https://cdn.cloudflare.steamstatic.com/steam/apps/1259970/header.jpg?t=1618425524",
                            LinkVideo = "https://cdn.cloudflare.steamstatic.com/steam/apps/256808957/movie480_vp9.webm?t=1605059321",
                            Nome = "eFootball PES 2021 SEASON UPDATE",
                            Preco = 99.900000000000006,
                            Publisher = "Konami Digital Entertainment",
                            compras = 0
                        });
                });

            modelBuilder.Entity("Pindorama.Models.Imagem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<string>("LinkImagem")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("Imagens");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GameId = 1,
                            LinkImagem = "https://cdn.cloudflare.steamstatic.com/steam/apps/730/ss_34090867f1a02b6c17652ba9043e3f622ed985a9.600x338.jpg?t=1631908705"
                        },
                        new
                        {
                            Id = 2,
                            GameId = 1,
                            LinkImagem = "https://cdn.cloudflare.steamstatic.com/steam/apps/730/ss_d196d945c6170e9cadaf67a6dea675bd5fa7a046.600x338.jpg?t=1631908705"
                        },
                        new
                        {
                            Id = 3,
                            GameId = 1,
                            LinkImagem = "https://cdn.cloudflare.steamstatic.com/steam/apps/730/ss_2b9e362287b509bb3864fa7bad654fe1fda0f7ed.600x338.jpg?t=1631908705"
                        },
                        new
                        {
                            Id = 4,
                            GameId = 2,
                            LinkImagem = "https://cdn.cloudflare.steamstatic.com/steam/apps/870780/ss_8376498631b089e52fb5c75ffe119e0de5e6aed1.600x338.jpg?t=1636733774"
                        },
                        new
                        {
                            Id = 5,
                            GameId = 2,
                            LinkImagem = "https://cdn.cloudflare.steamstatic.com/steam/apps/870780/ss_165fb4ca28f4db79b878e8c56ba6502e782c0bb2.600x338.jpg?t=1636733774"
                        },
                        new
                        {
                            Id = 6,
                            GameId = 2,
                            LinkImagem = "https://cdn.cloudflare.steamstatic.com/steam/apps/870780/ss_06b7e4baac0ac7f2ecfcc8d3198f707339c6296f.600x338.jpg?t=1636733774"
                        },
                        new
                        {
                            Id = 7,
                            GameId = 3,
                            LinkImagem = "https://cdn.cloudflare.steamstatic.com/steam/apps/703080/ss_fac76f23b1b655dd0459db1a443bc8adb02e4279.600x338.jpg?t=1639154253"
                        },
                        new
                        {
                            Id = 8,
                            GameId = 3,
                            LinkImagem = "https://cdn.cloudflare.steamstatic.com/steam/apps/703080/ss_c57319ad1fcc446a6a241b279a8477f7b741cd76.600x338.jpg?t=1639154253"
                        },
                        new
                        {
                            Id = 9,
                            GameId = 3,
                            LinkImagem = "https://cdn.cloudflare.steamstatic.com/steam/apps/703080/ss_5fe82516d6b1d42399dfded9fb86d6249c9d05cd.600x338.jpg?t=1639154253"
                        },
                        new
                        {
                            Id = 10,
                            GameId = 4,
                            LinkImagem = "https://cdn.cloudflare.steamstatic.com/steam/apps/1085660/ss_7fcc82f468fcf8278c7ffa95cebf949bfc6845fc.600x338.jpg?t=1638897108"
                        },
                        new
                        {
                            Id = 11,
                            GameId = 4,
                            LinkImagem = "https://cdn.cloudflare.steamstatic.com/steam/apps/1085660/ss_01fdd090ed1dd70112ce2c6d6fc208df0a008ac7.600x338.jpg?t=1638897108"
                        },
                        new
                        {
                            Id = 12,
                            GameId = 4,
                            LinkImagem = "https://cdn.cloudflare.steamstatic.com/steam/apps/1085660/ss_c142f5078ace9f5e2eb2c80aa3bf768e156b4ee9.600x338.jpg?t=1638897108"
                        },
                        new
                        {
                            Id = 13,
                            GameId = 5,
                            LinkImagem = "https://cdn.cloudflare.steamstatic.com/steam/apps/230410/ss_2d79448091149a8cc790b62e7422615a011d015a.600x338.jpg?t=1638285467"
                        },
                        new
                        {
                            Id = 14,
                            GameId = 5,
                            LinkImagem = "https://cdn.cloudflare.steamstatic.com/steam/apps/230410/ss_ead77e7b45f8dcfcf54d7a061745e7c99383bfc3.600x338.jpg?t=1638285467"
                        },
                        new
                        {
                            Id = 15,
                            GameId = 5,
                            LinkImagem = "https://cdn.cloudflare.steamstatic.com/steam/apps/230410/ss_a3bddbc994e6b3ca465ffb0e8c38bdb0525ca7d2.600x338.jpg?t=1638285467"
                        },
                        new
                        {
                            Id = 16,
                            GameId = 6,
                            LinkImagem = "https://cdn.cloudflare.steamstatic.com/steam/apps/1172470/ss_8731a6552dce7c9e9e6da79d6e42f62c4dcb835d.600x338.jpg?t=1638900075"
                        },
                        new
                        {
                            Id = 17,
                            GameId = 6,
                            LinkImagem = "https://cdn.cloudflare.steamstatic.com/steam/apps/1172470/ss_1512fa5b0c252aac80b7011e2e332d45116053ca.600x338.jpg?t=1638900075"
                        },
                        new
                        {
                            Id = 18,
                            GameId = 6,
                            LinkImagem = "https://cdn.cloudflare.steamstatic.com/steam/apps/1172470/ss_e2f6718c84031f0cbe6ce380559359833679c27b.600x338.jpg?t=1638900075"
                        },
                        new
                        {
                            Id = 19,
                            GameId = 7,
                            LinkImagem = "https://cdn.cloudflare.steamstatic.com/steam/apps/466560/ss_97fe21d69fd7a6346bac022eca6959a1ed26cb7d.600x338.jpg?t=1635494563"
                        },
                        new
                        {
                            Id = 20,
                            GameId = 7,
                            LinkImagem = "https://cdn.cloudflare.steamstatic.com/steam/apps/466560/ss_3de44ce0617567838caae8bed5ddb9eb52f0feb8.600x338.jpg?t=1635494563"
                        },
                        new
                        {
                            Id = 21,
                            GameId = 7,
                            LinkImagem = "https://cdn.cloudflare.steamstatic.com/steam/apps/466560/ss_33ef40a942043fd97e6c0a52cf758134db9e3985.600x338.jpg?t=1635494563"
                        },
                        new
                        {
                            Id = 22,
                            GameId = 8,
                            LinkImagem = "https://cdn.cloudflare.steamstatic.com/steam/apps/524220/ss_8b29f7e1ce9a8b9313dc3eb50dbe76a4cf94eef9.600x338.jpg?t=1624266255"
                        },
                        new
                        {
                            Id = 23,
                            GameId = 8,
                            LinkImagem = "https://cdn.cloudflare.steamstatic.com/steam/apps/524220/ss_e926e3b5d440b4f244525745c7100edc2d717b85.600x338.jpg?t=1624266255"
                        },
                        new
                        {
                            Id = 24,
                            GameId = 8,
                            LinkImagem = "https://cdn.cloudflare.steamstatic.com/steam/apps/524220/ss_d0314b4c134329a483b5e43af951f60274abc66b.600x338.jpg?t=1624266255"
                        },
                        new
                        {
                            Id = 25,
                            GameId = 9,
                            LinkImagem = "https://cdn.cloudflare.steamstatic.com/steam/apps/1517290/ss_731b9a3f02ab15c517b9c42c3cbe9a71866be4d4.600x338.jpg?t=1639065984"
                        },
                        new
                        {
                            Id = 26,
                            GameId = 9,
                            LinkImagem = "https://cdn.cloudflare.steamstatic.com/steam/apps/1517290/ss_9ddf67a6ebb471b99f9d139ab4420bba1cb25b50.600x338.jpg?t=1639065984"
                        },
                        new
                        {
                            Id = 27,
                            GameId = 9,
                            LinkImagem = "https://cdn.cloudflare.steamstatic.com/steam/apps/1517290/ss_075b303b59a5e9a0ae6c0fff78839116e6f75848.600x338.jpg?t=1639065984"
                        },
                        new
                        {
                            Id = 28,
                            GameId = 10,
                            LinkImagem = "https://cdn.cloudflare.steamstatic.com/steam/apps/546560/ss_d61365e93f20ceb5a94a1e5b2811cf504cbfa303.600x338.jpg?t=1635876995"
                        },
                        new
                        {
                            Id = 29,
                            GameId = 10,
                            LinkImagem = "https://cdn.cloudflare.steamstatic.com/steam/apps/546560/ss_70fce3236bf252d3814f793744f648cbe35164e4.600x338.jpg?t=1635876995"
                        },
                        new
                        {
                            Id = 30,
                            GameId = 10,
                            LinkImagem = "https://cdn.cloudflare.steamstatic.com/steam/apps/546560/ss_0360004603a7861cf6781d5449e641f916f1ee07.600x338.jpg?t=1635876995"
                        },
                        new
                        {
                            Id = 31,
                            GameId = 11,
                            LinkImagem = "https://cdn.cloudflare.steamstatic.com/steam/apps/1238840/ss_b914b0daf3c46d908d403bdec2881cf2b8d34915.600x338.jpg?t=1633006806"
                        },
                        new
                        {
                            Id = 32,
                            GameId = 11,
                            LinkImagem = "https://cdn.cloudflare.steamstatic.com/steam/apps/1238840/ss_432fba694d3dfdab325ddf83cbb355545a4554c6.600x338.jpg?t=1633006806"
                        },
                        new
                        {
                            Id = 33,
                            GameId = 11,
                            LinkImagem = "https://cdn.cloudflare.steamstatic.com/steam/apps/1238840/ss_2aac0cbea68f0ac82154ca627e2e991fc65c9ede.600x338.jpg?t=1633006806"
                        },
                        new
                        {
                            Id = 34,
                            GameId = 12,
                            LinkImagem = "https://cdn.cloudflare.steamstatic.com/steam/apps/1063730/ss_32b377faf983064af7638e858e1bfa7c845c9e2f.600x338.jpg?t=1637255211"
                        },
                        new
                        {
                            Id = 35,
                            GameId = 12,
                            LinkImagem = "https://cdn.cloudflare.steamstatic.com/steam/apps/1063730/ss_84bc9909c2dfc8ec0d4ff84fd072b35785332fdc.600x338.jpg?t=1637255211"
                        },
                        new
                        {
                            Id = 36,
                            GameId = 12,
                            LinkImagem = "https://cdn.cloudflare.steamstatic.com/steam/apps/1063730/ss_ceeb983fca848dc3ec1ce88efcbf85cce6f00489.600x338.jpg?t=1637255211"
                        },
                        new
                        {
                            Id = 37,
                            GameId = 13,
                            LinkImagem = "https://cdn.cloudflare.steamstatic.com/steam/apps/570/ss_86d675fdc73ba10462abb8f5ece7791c5047072c.600x338.jpg?t=1635466719"
                        },
                        new
                        {
                            Id = 38,
                            GameId = 13,
                            LinkImagem = "https://cdn.cloudflare.steamstatic.com/steam/apps/570/ss_27b6345f22243bd6b885cc64c5cda74e4bd9c3e8.600x338.jpg?t=1635466719"
                        },
                        new
                        {
                            Id = 39,
                            GameId = 13,
                            LinkImagem = "https://cdn.cloudflare.steamstatic.com/steam/apps/570/ss_e0a92f15a6631a8186df79182d0fe28b5e37d8cb.600x338.jpg?t=1635466719"
                        },
                        new
                        {
                            Id = 40,
                            GameId = 14,
                            LinkImagem = "https://cdn.cloudflare.steamstatic.com/steam/apps/790710/ss_f92678cc1967a70f441be2816cdbde719678edd9.600x338.jpg?t=1635932497"
                        },
                        new
                        {
                            Id = 41,
                            GameId = 14,
                            LinkImagem = "https://cdn.cloudflare.steamstatic.com/steam/apps/790710/ss_f3bbaf14a952779d700663954be180fbc490748a.600x338.jpg?t=1635932497"
                        },
                        new
                        {
                            Id = 42,
                            GameId = 14,
                            LinkImagem = "https://cdn.cloudflare.steamstatic.com/steam/apps/790710/ss_6a6b54e02fe5016b6027d1e35d28a4776e8f5287.600x338.jpg?t=1635932497"
                        },
                        new
                        {
                            Id = 43,
                            GameId = 15,
                            LinkImagem = "https://cdn.cloudflare.steamstatic.com/steam/apps/767560/ss_a1428f997d3eafe171fc578ed2f83093c14ec88c.600x338.jpg?t=1638264226"
                        },
                        new
                        {
                            Id = 44,
                            GameId = 15,
                            LinkImagem = "https://cdn.cloudflare.steamstatic.com/steam/apps/767560/ss_1352d9effbd99f47dc64e046eb54588188d7b10d.600x338.jpg?t=1638264226"
                        },
                        new
                        {
                            Id = 45,
                            GameId = 15,
                            LinkImagem = "https://cdn.cloudflare.steamstatic.com/steam/apps/767560/ss_f7e2c410a823139e4206d42760cf907e10b1c9f5.600x338.jpg?t=1638264226"
                        },
                        new
                        {
                            Id = 46,
                            GameId = 16,
                            LinkImagem = "https://cdn.cloudflare.steamstatic.com/steam/apps/238960/ss_984ea348b3c7d9495ad177b1c7530a3cb7e6ff0f.600x338.jpg?t=1635819685"
                        },
                        new
                        {
                            Id = 47,
                            GameId = 16,
                            LinkImagem = "https://cdn.cloudflare.steamstatic.com/steam/apps/238960/ss_40fa77890c74dd962fd665fa17440cc87003456e.600x338.jpg?t=1635819685"
                        },
                        new
                        {
                            Id = 48,
                            GameId = 16,
                            LinkImagem = "https://cdn.cloudflare.steamstatic.com/steam/apps/238960/ss_f50b319eb3cd8c88acb2cc0359359d656ae06624.600x338.jpg?t=1635819685"
                        },
                        new
                        {
                            Id = 49,
                            GameId = 17,
                            LinkImagem = "https://cdn.cloudflare.steamstatic.com/steam/apps/291480/ss_f4ffe6c0f8a9c14c1dac007f31c51d7a240f0262.600x338.jpg?t=1639068783"
                        },
                        new
                        {
                            Id = 50,
                            GameId = 17,
                            LinkImagem = "https://cdn.cloudflare.steamstatic.com/steam/apps/291480/ss_6fef3cf98354f3b592a49a5d82e4de3be0ab8074.600x338.jpg?t=1639068783"
                        },
                        new
                        {
                            Id = 51,
                            GameId = 17,
                            LinkImagem = "https://cdn.cloudflare.steamstatic.com/steam/apps/291480/ss_61215b055625fae5aed3356a0aeab8b19deee925.600x338.jpg?t=1639068783"
                        },
                        new
                        {
                            Id = 52,
                            GameId = 18,
                            LinkImagem = "https://cdn.cloudflare.steamstatic.com/steam/apps/109600/ss_4cebfb468c713e5126c95479c30866fff975bfaf.600x338.jpg?t=1636736301"
                        },
                        new
                        {
                            Id = 53,
                            GameId = 19,
                            LinkImagem = "https://cdn.cloudflare.steamstatic.com/steam/apps/109600/ss_a704890424b434a66d93bd73af1a3e616cca834a.600x338.jpg?t=1636736301"
                        },
                        new
                        {
                            Id = 54,
                            GameId = 19,
                            LinkImagem = "https://cdn.cloudflare.steamstatic.com/steam/apps/109600/ss_f7c2a3639d782aec69c6d8d075177de7fe291441.600x338.jpg?t=1636736301"
                        },
                        new
                        {
                            Id = 55,
                            GameId = 19,
                            LinkImagem = "https://cdn.cloudflare.steamstatic.com/steam/apps/109600/ss_95fa23b07c9bca7ba1cf6941cf169c3df822b6bd.600x338.jpg?t=1636736301"
                        },
                        new
                        {
                            Id = 56,
                            GameId = 20,
                            LinkImagem = "https://cdn.cloudflare.steamstatic.com/steam/apps/1259970/ss_05b5733f8fc79533ffe773dfb628c1995d10af00.600x338.jpg?t=1639008061"
                        },
                        new
                        {
                            Id = 57,
                            GameId = 20,
                            LinkImagem = "https://cdn.cloudflare.steamstatic.com/steam/apps/1259970/ss_0e814100dc3fca73e76a1c592316ed9285a374a6.600x338.jpg?t=1639008061"
                        },
                        new
                        {
                            Id = 58,
                            GameId = 20,
                            LinkImagem = "https://cdn.cloudflare.steamstatic.com/steam/apps/1259970/ss_99261ae7af4f339269a9628a522a1d443b8f126b.600x338.jpg?t=1639008061"
                        });
                });

            modelBuilder.Entity("Pindorama.Models.LikeComment", b =>
                {
                    b.Property<int>("CommentId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CommentId", "UsuarioId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("LikeComments");
                });

            modelBuilder.Entity("Pindorama.Models.LikePost", b =>
                {
                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("PostId", "UsuarioId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("LikePosts");
                });

            modelBuilder.Entity("Pindorama.Models.Mensagem", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("alvoId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("autorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("corpoMensagem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("dataEnvio")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.HasIndex("alvoId");

                    b.HasIndex("autorId");

                    b.ToTable("Mensagens");
                });

            modelBuilder.Entity("Pindorama.Models.Postagem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ComunidadeId")
                        .HasColumnType("int");

                    b.Property<string>("Conteudo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataPostagem")
                        .HasColumnType("datetime2");

                    b.Property<string>("LinkImagem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ComunidadeId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Postagens");
                });

            modelBuilder.Entity("Pindorama.Models.Usuario", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<DateTime?>("DataNascimento")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("LinkBanner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkImagem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cep")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cnpj")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cpf")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Usuario");
                });

            modelBuilder.Entity("CategoriaGame", b =>
                {
                    b.HasOne("Pindorama.Models.Categoria", null)
                        .WithMany()
                        .HasForeignKey("CategoriasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pindorama.Models.Game", null)
                        .WithMany()
                        .HasForeignKey("JogosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GameUsuario", b =>
                {
                    b.HasOne("Pindorama.Models.Game", null)
                        .WithMany()
                        .HasForeignKey("GamesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pindorama.Models.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Pindorama.Models.Amizade", b =>
                {
                    b.HasOne("Pindorama.Models.Usuario", "Origem")
                        .WithMany("Alvo")
                        .HasForeignKey("AlvoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pindorama.Models.Usuario", "Alvo")
                        .WithMany("Origem")
                        .HasForeignKey("OrigemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Alvo");

                    b.Navigation("Origem");
                });

            modelBuilder.Entity("Pindorama.Models.Comentario", b =>
                {
                    b.HasOne("Pindorama.Models.Usuario", "Autor")
                        .WithMany("Comentarios")
                        .HasForeignKey("AutorId");

                    b.HasOne("Pindorama.Models.Postagem", "PostagemPai")
                        .WithMany("Comentarios")
                        .HasForeignKey("PostagemPaiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Autor");

                    b.Navigation("PostagemPai");
                });

            modelBuilder.Entity("Pindorama.Models.Imagem", b =>
                {
                    b.HasOne("Pindorama.Models.Game", "Game")
                        .WithMany("Imagens")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("Pindorama.Models.LikeComment", b =>
                {
                    b.HasOne("Pindorama.Models.Comentario", "Comment")
                        .WithMany("Likes")
                        .HasForeignKey("CommentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pindorama.Models.Usuario", "Usuario")
                        .WithMany("Likes")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Comment");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Pindorama.Models.LikePost", b =>
                {
                    b.HasOne("Pindorama.Models.Postagem", "Post")
                        .WithMany("Likes")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pindorama.Models.Usuario", "Usuario")
                        .WithMany("LikesPost")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Pindorama.Models.Mensagem", b =>
                {
                    b.HasOne("Pindorama.Models.Usuario", "alvo")
                        .WithMany()
                        .HasForeignKey("alvoId");

                    b.HasOne("Pindorama.Models.Usuario", "autor")
                        .WithMany("Mensagens")
                        .HasForeignKey("autorId");

                    b.Navigation("alvo");

                    b.Navigation("autor");
                });

            modelBuilder.Entity("Pindorama.Models.Postagem", b =>
                {
                    b.HasOne("Pindorama.Models.Game", "Comunidade")
                        .WithMany("Postagens")
                        .HasForeignKey("ComunidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pindorama.Models.Usuario", "Usuario")
                        .WithMany("Postagens")
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Comunidade");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Pindorama.Models.Comentario", b =>
                {
                    b.Navigation("Likes");
                });

            modelBuilder.Entity("Pindorama.Models.Game", b =>
                {
                    b.Navigation("Imagens");

                    b.Navigation("Postagens");
                });

            modelBuilder.Entity("Pindorama.Models.Postagem", b =>
                {
                    b.Navigation("Comentarios");

                    b.Navigation("Likes");
                });

            modelBuilder.Entity("Pindorama.Models.Usuario", b =>
                {
                    b.Navigation("Alvo");

                    b.Navigation("Comentarios");

                    b.Navigation("Likes");

                    b.Navigation("LikesPost");

                    b.Navigation("Mensagens");

                    b.Navigation("Origem");

                    b.Navigation("Postagens");
                });
#pragma warning restore 612, 618
        }
    }
}
